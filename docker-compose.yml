version: '3.8'

services:
  backend:
    build:
      context: ./backend
    depends_on:
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_started

    environment:
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      ES_HOST_URL: "http://elasticsearch:9200"
      HAYSTACK_TELEMETRY_ENABLED: False

    env_file:
      - .env
    ports:
      - "8080:8080"

    healthcheck:
      test: [ "CMD", "curl", "-f", "-s", "http://backend:8080/health" ]
      interval: 60s
      timeout: 10s
      retries: 3

    volumes:
      - ./backend_models/:/models/

  frontend:
    build:
      context: ./frontend
      args:
          ENVIRONMENT: development
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    environment:
      VITE_BASE_API: "http://backend:8080/api/"

  database:
    image: postgres:latest
    env_file:
      - .env
    ports:
      - "5432:5432"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 3
    volumes:
      - ./postgresql_data:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:8.8.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.network.tcp.connect_timeout=180s"
      - "ES_INDEX_NUMBER_OF_SHARDS=1"
      - "ES_INDEX_NUMBER_OF_REPLICAS=1"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 3

  migration:
    build:
      context: ./migration
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - .env
    environment:
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432

volumes:
  elasticsearch_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./elasticsearch_data
  postgresql_data:
    driver: local
  backend_models:
    driver: local
